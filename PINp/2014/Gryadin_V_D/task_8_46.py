#Задача 8. Вариант 46
#Доработайте игру "Анаграммы" (см. М.Доусон Программируем на Python. Гл.4)
#так, чтобы к каждому слову полагалась подсказка. Игрок должен получать право на
#подсказку в том случае, если у него нет никаких предположений.
#Разработайте систему начисления очков, по которой бы игроки,
#отгадавшие слово без подсказки, получали больше тех, кто запросил подсказку.

#Gryadin V. D.

import random

# Создание кортежа с вариантами слов
WORDS = ("метро", "заголовок", "математика", "земля", "ответственность", "питон")
KEYS = ("Общественный транспорт, на котором вы добираетесь до дома,работы",
        "Каждая статья имеет....",
        "На этом предмете решаются задачи, уравнения",
        "На этой планете мы живём",
        "Бывает 4 видов:Административная,уголовная,гражданская, дисциплинарная ",
        "На этом языке написанна эта программа")  


# Случайным образом выбираем слово
i = random.randrange(0,6)
word=WORDS[i]
key=KEYS[i]

# Верный ответ для проверки
correct = word

# Создание анаграммы
jumble =""
while word:
#перемешиваем буквы в слове
    position = random.randrange(len(word))
    jumble += word[position]
    word = word[:position] + word[(position + 1):]

# Начало игры
score = 1000
print(
"""
   Добро пожаловать в игру "Анаграммы"!
        
   Надо переставить буквы так, чтобы получилось осмысленное слово.
   (Для выхода нажмите Enter, не вводя своей версии).
"""
)
print("Вот анаграмма:", jumble)

#Начисление баллов и подсказки
guess = input("\nПопробуй отгадать исходное слово: ")
while guess != correct and guess != "":
    print("К сожалению, это не так.")
    score =score- 10
    helpk = input("\nВам нужна подсказка?")
    if helpk =="да":
        print(key)
        guess = input("\nПопробуй отгадать исходное слово: ")
        score=score-50
    else:
            guess = input("\nПопробуй отгадать исходное слово: ")
if guess == correct:
    print("Это так! Вы отгадали!\n")
    print("Число ваших очков = ",score)

print("Спасибо за игру.")

input("\n\nНажмите Enter для выхода.")








































